/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetFilesResponseBody = {
  id: string;
  business: string;
  user: string;
  object: string;
  created: string;
  expiresAt: string;
  filename: string;
  livemode: boolean;
  purpose: string;
  title: string | null;
  size: string;
  type: string;
  url: string;
  updated: string | null;
};

/** @internal */
export const GetFilesResponseBody$inboundSchema: z.ZodType<
  GetFilesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  business: z.string(),
  user: z.string(),
  object: z.string(),
  created: z.string(),
  expires_at: z.string(),
  filename: z.string(),
  livemode: z.boolean(),
  purpose: z.string(),
  title: z.nullable(z.string()),
  size: z.string(),
  type: z.string(),
  url: z.string(),
  updated: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    "expires_at": "expiresAt",
  });
});

/** @internal */
export type GetFilesResponseBody$Outbound = {
  id: string;
  business: string;
  user: string;
  object: string;
  created: string;
  expires_at: string;
  filename: string;
  livemode: boolean;
  purpose: string;
  title: string | null;
  size: string;
  type: string;
  url: string;
  updated: string | null;
};

/** @internal */
export const GetFilesResponseBody$outboundSchema: z.ZodType<
  GetFilesResponseBody$Outbound,
  z.ZodTypeDef,
  GetFilesResponseBody
> = z.object({
  id: z.string(),
  business: z.string(),
  user: z.string(),
  object: z.string(),
  created: z.string(),
  expiresAt: z.string(),
  filename: z.string(),
  livemode: z.boolean(),
  purpose: z.string(),
  title: z.nullable(z.string()),
  size: z.string(),
  type: z.string(),
  url: z.string(),
  updated: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    expiresAt: "expires_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFilesResponseBody$ {
  /** @deprecated use `GetFilesResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetFilesResponseBody$inboundSchema;
  /** @deprecated use `GetFilesResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetFilesResponseBody$outboundSchema;
  /** @deprecated use `GetFilesResponseBody$Outbound` instead. */
  export type Outbound = GetFilesResponseBody$Outbound;
}

export function getFilesResponseBodyToJSON(
  getFilesResponseBody: GetFilesResponseBody,
): string {
  return JSON.stringify(
    GetFilesResponseBody$outboundSchema.parse(getFilesResponseBody),
  );
}

export function getFilesResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetFilesResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFilesResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFilesResponseBody' from JSON`,
  );
}
