/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetPricesResponseBody = {
  id: string;
  user: string;
  business: string;
  product: string;
  object: string;
  active: boolean;
  created: string;
  currency: string;
  livemode: boolean;
  nickname: string | null;
  unitAmount: number;
  unitAmountDecimal: string;
};

/** @internal */
export const GetPricesResponseBody$inboundSchema: z.ZodType<
  GetPricesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  user: z.string(),
  business: z.string(),
  product: z.string(),
  object: z.string(),
  active: z.boolean(),
  created: z.string(),
  currency: z.string(),
  livemode: z.boolean(),
  nickname: z.nullable(z.string()),
  unit_amount: z.number().int(),
  unit_amount_decimal: z.string(),
}).transform((v) => {
  return remap$(v, {
    "unit_amount": "unitAmount",
    "unit_amount_decimal": "unitAmountDecimal",
  });
});

/** @internal */
export type GetPricesResponseBody$Outbound = {
  id: string;
  user: string;
  business: string;
  product: string;
  object: string;
  active: boolean;
  created: string;
  currency: string;
  livemode: boolean;
  nickname: string | null;
  unit_amount: number;
  unit_amount_decimal: string;
};

/** @internal */
export const GetPricesResponseBody$outboundSchema: z.ZodType<
  GetPricesResponseBody$Outbound,
  z.ZodTypeDef,
  GetPricesResponseBody
> = z.object({
  id: z.string(),
  user: z.string(),
  business: z.string(),
  product: z.string(),
  object: z.string(),
  active: z.boolean(),
  created: z.string(),
  currency: z.string(),
  livemode: z.boolean(),
  nickname: z.nullable(z.string()),
  unitAmount: z.number().int(),
  unitAmountDecimal: z.string(),
}).transform((v) => {
  return remap$(v, {
    unitAmount: "unit_amount",
    unitAmountDecimal: "unit_amount_decimal",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPricesResponseBody$ {
  /** @deprecated use `GetPricesResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetPricesResponseBody$inboundSchema;
  /** @deprecated use `GetPricesResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetPricesResponseBody$outboundSchema;
  /** @deprecated use `GetPricesResponseBody$Outbound` instead. */
  export type Outbound = GetPricesResponseBody$Outbound;
}

export function getPricesResponseBodyToJSON(
  getPricesResponseBody: GetPricesResponseBody,
): string {
  return JSON.stringify(
    GetPricesResponseBody$outboundSchema.parse(getPricesResponseBody),
  );
}

export function getPricesResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetPricesResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPricesResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPricesResponseBody' from JSON`,
  );
}
