/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetPaymentLinksMetadata = {};

export type GetPaymentLinksHostedConfirmation = {
  customMessage: string | null;
};

export type GetPaymentLinksAfterCompletion = {
  hostedConfirmation: GetPaymentLinksHostedConfirmation;
};

export const GetPaymentLinksSubmitType = {
  Auto: "auto",
  Donate: "donate",
  Pay: "pay",
} as const;
export type GetPaymentLinksSubmitType = ClosedEnum<
  typeof GetPaymentLinksSubmitType
>;

export type GetPaymentLinksResponseBody = {
  id: string;
  product: string;
  active: boolean;
  metadata: GetPaymentLinksMetadata;
  afterCompletion: GetPaymentLinksAfterCompletion;
  currency: string;
  livemode: boolean;
  submitType: GetPaymentLinksSubmitType;
  inactiveMessage: string | null;
  url: string;
  created: string | null;
  updated: string | null;
};

/** @internal */
export const GetPaymentLinksMetadata$inboundSchema: z.ZodType<
  GetPaymentLinksMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type GetPaymentLinksMetadata$Outbound = {};

/** @internal */
export const GetPaymentLinksMetadata$outboundSchema: z.ZodType<
  GetPaymentLinksMetadata$Outbound,
  z.ZodTypeDef,
  GetPaymentLinksMetadata
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPaymentLinksMetadata$ {
  /** @deprecated use `GetPaymentLinksMetadata$inboundSchema` instead. */
  export const inboundSchema = GetPaymentLinksMetadata$inboundSchema;
  /** @deprecated use `GetPaymentLinksMetadata$outboundSchema` instead. */
  export const outboundSchema = GetPaymentLinksMetadata$outboundSchema;
  /** @deprecated use `GetPaymentLinksMetadata$Outbound` instead. */
  export type Outbound = GetPaymentLinksMetadata$Outbound;
}

export function getPaymentLinksMetadataToJSON(
  getPaymentLinksMetadata: GetPaymentLinksMetadata,
): string {
  return JSON.stringify(
    GetPaymentLinksMetadata$outboundSchema.parse(getPaymentLinksMetadata),
  );
}

export function getPaymentLinksMetadataFromJSON(
  jsonString: string,
): SafeParseResult<GetPaymentLinksMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPaymentLinksMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPaymentLinksMetadata' from JSON`,
  );
}

/** @internal */
export const GetPaymentLinksHostedConfirmation$inboundSchema: z.ZodType<
  GetPaymentLinksHostedConfirmation,
  z.ZodTypeDef,
  unknown
> = z.object({
  custom_message: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    "custom_message": "customMessage",
  });
});

/** @internal */
export type GetPaymentLinksHostedConfirmation$Outbound = {
  custom_message: string | null;
};

/** @internal */
export const GetPaymentLinksHostedConfirmation$outboundSchema: z.ZodType<
  GetPaymentLinksHostedConfirmation$Outbound,
  z.ZodTypeDef,
  GetPaymentLinksHostedConfirmation
> = z.object({
  customMessage: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    customMessage: "custom_message",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPaymentLinksHostedConfirmation$ {
  /** @deprecated use `GetPaymentLinksHostedConfirmation$inboundSchema` instead. */
  export const inboundSchema = GetPaymentLinksHostedConfirmation$inboundSchema;
  /** @deprecated use `GetPaymentLinksHostedConfirmation$outboundSchema` instead. */
  export const outboundSchema =
    GetPaymentLinksHostedConfirmation$outboundSchema;
  /** @deprecated use `GetPaymentLinksHostedConfirmation$Outbound` instead. */
  export type Outbound = GetPaymentLinksHostedConfirmation$Outbound;
}

export function getPaymentLinksHostedConfirmationToJSON(
  getPaymentLinksHostedConfirmation: GetPaymentLinksHostedConfirmation,
): string {
  return JSON.stringify(
    GetPaymentLinksHostedConfirmation$outboundSchema.parse(
      getPaymentLinksHostedConfirmation,
    ),
  );
}

export function getPaymentLinksHostedConfirmationFromJSON(
  jsonString: string,
): SafeParseResult<GetPaymentLinksHostedConfirmation, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPaymentLinksHostedConfirmation$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPaymentLinksHostedConfirmation' from JSON`,
  );
}

/** @internal */
export const GetPaymentLinksAfterCompletion$inboundSchema: z.ZodType<
  GetPaymentLinksAfterCompletion,
  z.ZodTypeDef,
  unknown
> = z.object({
  hosted_confirmation: z.lazy(() =>
    GetPaymentLinksHostedConfirmation$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "hosted_confirmation": "hostedConfirmation",
  });
});

/** @internal */
export type GetPaymentLinksAfterCompletion$Outbound = {
  hosted_confirmation: GetPaymentLinksHostedConfirmation$Outbound;
};

/** @internal */
export const GetPaymentLinksAfterCompletion$outboundSchema: z.ZodType<
  GetPaymentLinksAfterCompletion$Outbound,
  z.ZodTypeDef,
  GetPaymentLinksAfterCompletion
> = z.object({
  hostedConfirmation: z.lazy(() =>
    GetPaymentLinksHostedConfirmation$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    hostedConfirmation: "hosted_confirmation",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPaymentLinksAfterCompletion$ {
  /** @deprecated use `GetPaymentLinksAfterCompletion$inboundSchema` instead. */
  export const inboundSchema = GetPaymentLinksAfterCompletion$inboundSchema;
  /** @deprecated use `GetPaymentLinksAfterCompletion$outboundSchema` instead. */
  export const outboundSchema = GetPaymentLinksAfterCompletion$outboundSchema;
  /** @deprecated use `GetPaymentLinksAfterCompletion$Outbound` instead. */
  export type Outbound = GetPaymentLinksAfterCompletion$Outbound;
}

export function getPaymentLinksAfterCompletionToJSON(
  getPaymentLinksAfterCompletion: GetPaymentLinksAfterCompletion,
): string {
  return JSON.stringify(
    GetPaymentLinksAfterCompletion$outboundSchema.parse(
      getPaymentLinksAfterCompletion,
    ),
  );
}

export function getPaymentLinksAfterCompletionFromJSON(
  jsonString: string,
): SafeParseResult<GetPaymentLinksAfterCompletion, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPaymentLinksAfterCompletion$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPaymentLinksAfterCompletion' from JSON`,
  );
}

/** @internal */
export const GetPaymentLinksSubmitType$inboundSchema: z.ZodNativeEnum<
  typeof GetPaymentLinksSubmitType
> = z.nativeEnum(GetPaymentLinksSubmitType);

/** @internal */
export const GetPaymentLinksSubmitType$outboundSchema: z.ZodNativeEnum<
  typeof GetPaymentLinksSubmitType
> = GetPaymentLinksSubmitType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPaymentLinksSubmitType$ {
  /** @deprecated use `GetPaymentLinksSubmitType$inboundSchema` instead. */
  export const inboundSchema = GetPaymentLinksSubmitType$inboundSchema;
  /** @deprecated use `GetPaymentLinksSubmitType$outboundSchema` instead. */
  export const outboundSchema = GetPaymentLinksSubmitType$outboundSchema;
}

/** @internal */
export const GetPaymentLinksResponseBody$inboundSchema: z.ZodType<
  GetPaymentLinksResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  product: z.string(),
  active: z.boolean(),
  metadata: z.lazy(() => GetPaymentLinksMetadata$inboundSchema),
  after_completion: z.lazy(() => GetPaymentLinksAfterCompletion$inboundSchema),
  currency: z.string(),
  livemode: z.boolean(),
  submit_type: GetPaymentLinksSubmitType$inboundSchema,
  inactive_message: z.nullable(z.string()),
  url: z.string(),
  created: z.nullable(z.string()),
  updated: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    "after_completion": "afterCompletion",
    "submit_type": "submitType",
    "inactive_message": "inactiveMessage",
  });
});

/** @internal */
export type GetPaymentLinksResponseBody$Outbound = {
  id: string;
  product: string;
  active: boolean;
  metadata: GetPaymentLinksMetadata$Outbound;
  after_completion: GetPaymentLinksAfterCompletion$Outbound;
  currency: string;
  livemode: boolean;
  submit_type: string;
  inactive_message: string | null;
  url: string;
  created: string | null;
  updated: string | null;
};

/** @internal */
export const GetPaymentLinksResponseBody$outboundSchema: z.ZodType<
  GetPaymentLinksResponseBody$Outbound,
  z.ZodTypeDef,
  GetPaymentLinksResponseBody
> = z.object({
  id: z.string(),
  product: z.string(),
  active: z.boolean(),
  metadata: z.lazy(() => GetPaymentLinksMetadata$outboundSchema),
  afterCompletion: z.lazy(() => GetPaymentLinksAfterCompletion$outboundSchema),
  currency: z.string(),
  livemode: z.boolean(),
  submitType: GetPaymentLinksSubmitType$outboundSchema,
  inactiveMessage: z.nullable(z.string()),
  url: z.string(),
  created: z.nullable(z.string()),
  updated: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    afterCompletion: "after_completion",
    submitType: "submit_type",
    inactiveMessage: "inactive_message",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPaymentLinksResponseBody$ {
  /** @deprecated use `GetPaymentLinksResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetPaymentLinksResponseBody$inboundSchema;
  /** @deprecated use `GetPaymentLinksResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetPaymentLinksResponseBody$outboundSchema;
  /** @deprecated use `GetPaymentLinksResponseBody$Outbound` instead. */
  export type Outbound = GetPaymentLinksResponseBody$Outbound;
}

export function getPaymentLinksResponseBodyToJSON(
  getPaymentLinksResponseBody: GetPaymentLinksResponseBody,
): string {
  return JSON.stringify(
    GetPaymentLinksResponseBody$outboundSchema.parse(
      getPaymentLinksResponseBody,
    ),
  );
}

export function getPaymentLinksResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetPaymentLinksResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPaymentLinksResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPaymentLinksResponseBody' from JSON`,
  );
}
